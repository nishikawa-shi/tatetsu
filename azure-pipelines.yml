trigger:
- main
- develop
- feature/*

pool:
  vmImage: macos-latest

stages:
- stage: qa_stage
  displayName: 動作検証ステージ
  condition: always()
  jobs:
  - job: check_job
    displayName: 標準のcheckエラー検出
    steps:
    - task: FlutterInstall@0
      inputs:
        channel: 'stable'
        version: 'latest'
    - script: |
        echo '$FLUTTERTOOLPATH/flutter pub get'
        $FLUTTERTOOLPATH/flutter pub get
        echo '$FLUTTERTOOLPATH/flutter analyze'
        $FLUTTERTOOLPATH/flutter analyze
      displayName: 'Flutter Analyze (scratch)'
    - task: FlutterTest@0
      inputs:
        projectDirectory: '.'
    - task: FlutterBuild@0
      inputs:
        target: 'apk'
        projectDirectory: '.'
        buildNumber: '$(Build.BuildId)'
- stage: beta_app_deploy_stage
  displayName: β版アプリ配布ステージ
  condition: always()
  dependsOn: qa_stage
  jobs:
  - job: firebase_deploy_job
    displayName: Firebaseへapk配布
    steps:
    - script: |
        echo $(Build.BuildId) | xargs -I {} sed -e 's/versionCode 1/versionCode {}/g' android/app/build.gradle > android/app/build.gradle.versioned
        diff android/app/build.gradle.versioned android/app/build.gradle
        mv android/app/build.gradle.versioned android/app/build.gradle
      displayName: 'build.gradleのVersionCode更新'
